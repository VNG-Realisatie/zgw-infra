global:
  celery:
    name: celery
    secretName: celery
  config:
    certManager: false
    createCronJobs: false
    createJobs: true
    createSecret: true
    enableTLS: false
    environment: docker-desktop
    kube: v1.25.2
    nginx: true
    pullPolicy: Always
  name: ri
  namespace: vng
  postgres:
    name: postgres
    password: FSpKyVPr8inQspTYGSItEj9J
    password_key: password
    secretName: postgres
    service:
      host: postgres
      port: 5432
    username: postgres
    username_key: username
  rabbitmq:
    default_password: 05bz2NpWWe9mbChRoTXQQc08
    default_user: nrc_root
    name: rabbitmq
    port: 5672
    secretName: rabbitmq
  redis:
    database: 7
    host: redis-test
    name: redis
    service:
      port: 6379
  secret_keys:
    ac: e62_8$*aeko$b7uzoz+wp6hd=(okc0u*4%$&4vg-=*b0^i!h$6
    brc: 5iz7t_s5z5o=rarahu!(_#bmkdohv()kx!h#!cjeov0cex1($2
    contactmomenten: wmt=_yp0l_8uyuw8h3z4v=otf9#yd5^yl=50#=&xevch%bsh3z
    deploy: ba-g#527bb)0puq09jm9)_j8j&g0z1tyr11q$qe_v0d724=290
    drc: c7*5t3u+ai6h1h+n=wa50(x+cr$_%kdta)e=ltipd2*_f0_gov
    kic: -dy=ncox(j912r#@8_ue@)c_4o&y-((tft&h_r-edegp)k6*+^
    klanten: o7belif19w@#lxo#_za(ai!w)5^t5&oo7)j4k!0)3kmvh^7__7
    nrc: (_d+ca7bf7hsxil=f8%0-rzc2o9tl_3n*07=+ggq&!2fq828y7
    verzoeken: g1=s4*(58x0(uuo9txr=(w@^q$4=ehvy^$rq5$4rny!=wq**^5
    vrl: -u%=q8v&%%x3z0b_al4xx+=$=tv0bb6&0i*%8@4st&!rp76vw&
    zrc: (+45ka%v$$72)0!k6uclbx!#87hfz-xfhc=+dv(1x-#@pmxc6+
    ztc: m9rx+r-zqq&@bwhz3!o=g=o&=6ru=%3od6@2#+j9kvx&7j#)a*
  sentry_dsn:
    ac: https://public@sentry.example.com/1
    brc: https://public@sentry.example.com/1
    contactmomenten: https://public@sentry.example.com/1
    deploy: https://public@sentry.example.com/1
    drc: https://public@sentry.example.com/1
    kic: https://public@sentry.example.com/1
    klanten: https://public@sentry.example.com/1
    nrc: https://public@sentry.example.com/1
    verzoeken: https://public@sentry.example.com/1
    vrl: https://public@sentry.example.com/1
    zrc: https://public@sentry.example.com/1
    ztc: https://public@sentry.example.com/1
  tokenIssuer:
    identifier: token-issuer-seeded
    identifierKey: identifierTokens
    secret: DOVg9ZrWSmONCvf4jYoxeGoB
    secretKey: secretTokens
    secretName: token-seeder
  tokenSeeder:
    imageRepo: ghcr.io/vng-realisatie/token-seeder
    secret: fqzY6ahZNWSt9QxrhMB1rVVj
    secretKey: internalToken
    tag: 0.0.2
ingress:
  instance: zgw-stable
  name: ref-implementatie
  services:
  - host: k8s-zrc-local.test
    name: zrc
    port: 8000
  - host: k8s-drc-local.test
    name: drc
    port: 8000
  - host: k8s-ztc-local.test
    name: ztc
    port: 8000
  - host: k8s-ac-local.test
    name: ac
    port: 8000
  - host: k8s-brc-local.test
    name: brc
    port: 8000
  - host: k8s-nrc-local.test
    name: nrc
    port: 8000
  - host: k8s-klanten-local.test
    name: klanten
    port: 8000
  - host: k8s-contactmomenten-local.test
    name: contactmomenten
    port: 8000
  - host: k8s-verzoeken-local.test
    name: verzoeken
    port: 8000
  - host: k8s-vrl-local.test
    name: vrl
    port: 8000
  - host: k8s-tokens-local.test
    name: token-issuer
    port: 8000
postgres:
  images:
    imageRepo: mdillon/postgis
    tag: latest
redis:
  images:
    imageRepo: redis
    tag: 5-alpine
services:
  ac:
    enabled: true
  brc:
    enabled: true
  contactmomenten:
    enabled: true
  drc:
    enabled: true
  klanten:
    enabled: true
  nrc:
    enabled: true
  token-issuer:
    enabled: true
  verzoeken:
    enabled: true
  vrl:
    enabled: true
  zrc:
    enabled: true
  ztc:
    enabled: true
