global:
  celery:
    name: celery
    secretName: celery
  config:
    certManager: false
    createCronJobs: false
    createJobs: true
    createSecret: true
    enableTLS: false
    environment: docker-desktop
    kube: v1.25.2
    nginx: true
    pullPolicy: Always
  name: ri
  namespace: vng
  postgres:
    name: postgres
    password: 2IKIKZut2qfQQTvW7vuGhLKa
    password_key: password
    secretName: postgres
    service:
      host: postgres
      port: 5432
    username: postgres
    username_key: username
  rabbitmq:
    default_password: CKTuPC6IFHPbpkG2QmnRQGmA
    default_user: nrc_root
    name: rabbitmq
    port: 5672
    secretName: rabbitmq
  redis:
    database: 7
    host: redis-test
    name: redis
    service:
      port: 6379
  secret_keys:
    ac: f)bi_psz#340i1l9$4qx1%-(ey68e0rk5+p*7hxa97lgn-t6v0
    brc: b8*_$%pv@f0$65j60ah)-y&&oc2rcb3*g-r#)#ept0rq7$7swy
    contactmomenten: g)s2z#6k+*f001lhvnk_l39p+888yw8!ga@h(=peto$!x$-ex&
    deploy: +hkf^!l^+ljzg&yk3+n2n6bgm9$pe7vn-ql($!(ckoro^xdh6l
    drc: b+7ke396w#@=pkj3@628eds6r9gpgvgh@v+27y-4c_ry#1py-0
    kic: d2-82p5@*1sjjg-k5u3277t_wmi$_q@=3%izo+poy^@h0yrney
    klanten: '!pe5=zkrbi2&j&ph8$pi+%0e8%34n^v7@wtk=+dllsrjhjgv50'
    nrc: nldiytq5a27c5#&e=2%8)dzyt69k%hx74(#m3ne%=-86p4!*on
    verzoeken: 21-xyc9jw5^u@#-mf4&doh7s^vm^3tfj^^rl92+8b4_o#*hnjt
    vrl: e+a!tt*twjx=&+)!!+so%w$(1(qk!yf4t^3@uckurshtf@!i2e
    zrc: +hk)=f9%1h=721qp2^b(&$os0nwn@1y&iy6d2uv0-(_t6=mad=
    ztc: (68gn(9d*v28__9(s54l&j51&#c31illbb^%ds&2+hovlav6*a
  sentry_dsn:
    ac: https://public@sentry.example.com/1
    brc: https://public@sentry.example.com/1
    contactmomenten: https://public@sentry.example.com/1
    deploy: https://public@sentry.example.com/1
    drc: https://public@sentry.example.com/1
    kic: https://public@sentry.example.com/1
    klanten: https://public@sentry.example.com/1
    nrc: https://public@sentry.example.com/1
    verzoeken: https://public@sentry.example.com/1
    vrl: https://public@sentry.example.com/1
    zrc: https://public@sentry.example.com/1
    ztc: https://public@sentry.example.com/1
  tokenIssuer:
    identifier: token-issuer-seeded
    identifierKey: identifierTokens
    secret: Q5XPacyiUtpYieH4PBiyVP5b
    secretKey: secretTokens
    secretName: token-seeder
  tokenSeeder:
    imageRepo: ghcr.io/vng-realisatie/token-seeder
    secret: KcMtlWnyX40q5kRdWgBrCyyr
    secretKey: internalToken
    tag: 0.0.2
ingress:
  instance: zgw-stable
  name: ref-implementatie
  services:
  - host: k8s-zrc-local.test
    name: zrc
    port: 8000
  - host: k8s-drc-local.test
    name: drc
    port: 8000
  - host: k8s-ztc-local.test
    name: ztc
    port: 8000
  - host: k8s-ac-local.test
    name: ac
    port: 8000
  - host: k8s-brc-local.test
    name: brc
    port: 8000
  - host: k8s-nrc-local.test
    name: nrc
    port: 8000
  - host: k8s-klanten-local.test
    name: klanten
    port: 8000
  - host: k8s-contactmomenten-local.test
    name: contactmomenten
    port: 8000
  - host: k8s-verzoeken-local.test
    name: verzoeken
    port: 8000
  - host: k8s-vrl-local.test
    name: vrl
    port: 8000
  - host: k8s-tokens-local.test
    name: token-issuer
    port: 8000
postgres:
  images:
    imageRepo: mdillon/postgis
    tag: latest
redis:
  images:
    imageRepo: redis
    tag: 5-alpine
services:
  ac:
    enabled: true
  brc:
    enabled: true
  contactmomenten:
    enabled: true
  drc:
    enabled: true
  klanten:
    enabled: true
  nrc:
    enabled: true
  token-issuer:
    enabled: true
  verzoeken:
    enabled: true
  vrl:
    enabled: true
  zrc:
    enabled: true
  ztc:
    enabled: true
