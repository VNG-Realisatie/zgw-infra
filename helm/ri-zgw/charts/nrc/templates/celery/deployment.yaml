apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Values.service.name }}-celery
  namespace: {{ .Values.global.namespace}}
  labels:
    {{- include "ri.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.service.name }}-celery
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.service.name }}-celery
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Values.service.name }}-celery
        image: {{ .Values.service.images.imageRepo}}:{{ .Values.service.images.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "250Mi"
            cpu: "50m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: {{.Values.service.name}}.conf.docker
          - name: ALLOWED_HOSTS
            value: {{ .Values.config.host }}
          - name: DB_NAME
            value: {{ .Values.database.name }}
          - name: DB_HOST
            value: {{ .Values.global.postgres.name }}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.postgres.secretName }}
                key: {{ .Values.global.postgres.username_key }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.postgres.secretName }}
                key: {{ .Values.global.postgres.password_key }}
          - name: {{ .Values.secret.key }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: {{ .Values.secret.key }}
          - name: PUBLISH_BROKER_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.celery.secretName  }}
                key: publish_broker_url
          - name: CELERY_BROKER_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.celery.secretName  }}
                key: broker_url
          - name: CELERY_RESULT_BACKEND
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.celery.secretName  }}
                key: result_backend
        command: ["/celery_worker.sh"]
