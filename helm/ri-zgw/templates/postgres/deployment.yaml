apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Values.global.postgres.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "ri.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgis
          image: {{ .Values.postgres.images.imageRepo}}:{{ .Values.postgres.images.tag }}
          ports:
            - containerPort: {{ .Values.global.postgres.service.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.postgres.secretName }}
                  key: {{ .Values.global.postgres.username_key }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.postgres.secretName }}
                  key: {{ .Values.global.postgres.password_key }}
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgis-pgdata
              subPath: postgres
      volumes:
        - name: postgis-pgdata
          persistentVolumeClaim:
            claimName: postgres-pvc
